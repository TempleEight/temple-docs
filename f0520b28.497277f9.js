(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{110:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return o})),i.d(t,"metadata",(function(){return r})),i.d(t,"rightToc",(function(){return b})),i.d(t,"default",(function(){return p}));var n=i(1),a=i(6),l=(i(0),i(117)),o={id:"primitives",title:"Primitives",sidebar_label:"Primitives"},r={id:"primitives",title:"Primitives",description:"TempleFile supports 8 primitive types, roughly aligned with those found in `SQL` style languages. Any property of a service can be of any of these types. ",source:"@site/docs/primitives.md",permalink:"/docs/primitives",editUrl:"https://github.com/TempleEight/temple-docs/edit/master/TempleEight/docs/primitives.md",sidebar_label:"Primitives",sidebar:"someSidebar",previous:{title:"TempleFile Specification",permalink:"/docs/templefile-spec"}},b=[{value:"Parameters",id:"parameters",children:[]},{value:"Primitives",id:"primitives",children:[{value:"<code>bool</code>",id:"bool",children:[]},{value:"<code>int(max: int, min: int = 0)</code>",id:"intmax-int-min-int--0",children:[]},{value:"<code>float(max: float, min: float = 0.0f, precision: int = 8)</code>",id:"floatmax-float-min-float--00f-precision-int--8",children:[]},{value:"<code>date</code>",id:"date",children:[]},{value:"<code>time</code>",id:"time",children:[]},{value:"<code>datetime</code>",id:"datetime",children:[]},{value:"<code>data(maxSize: long)</code>",id:"datamaxsize-long",children:[]}]}],m={rightToc:b};function p(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},m,i,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"TempleFile supports 8 primitive types, roughly aligned with those found in ",Object(l.b)("inlineCode",{parentName:"p"},"SQL")," style languages. Any property of a service can be of any of these types. "),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-temple"}),"bool\nstring(maxLength: int, minLength: int)\nint(max: int, min: int = 0)\nfloat(max: float, min: float = 0.0f, precision: int = 8)\ndate\ntime\ndatetime\ndata(maxSize: long)\n")),Object(l.b)("h2",{id:"parameters"},"Parameters"),Object(l.b)("p",null,"Many types include optional parameterisations, which will be enforced as either column constraints on the database table, or as checks in server-side code."),Object(l.b)("p",null,"All parameters are optional, and many have defaults that can be overridden."),Object(l.b)("h2",{id:"primitives"},"Primitives"),Object(l.b)("h3",{id:"bool"},Object(l.b)("inlineCode",{parentName:"h3"},"bool")),Object(l.b)("p",null,"Used for storing Boolean truthfulness."),Object(l.b)("p",null,"Possible values: ",Object(l.b)("inlineCode",{parentName:"p"},"[true, false]")),Object(l.b)("p",null,"###",Object(l.b)("inlineCode",{parentName:"p"},"string(maxLength: int, minLength: int)")),Object(l.b)("p",null,"Used for storing textual data, equivalent to the ",Object(l.b)("inlineCode",{parentName:"p"},"TEXT")," datatype in ",Object(l.b)("inlineCode",{parentName:"p"},"SQL"),". "),Object(l.b)("h4",{id:"parameters-1"},"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"maxLength: int"),": The maximum number of characters allowable in the string"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"minLength: int"),": The minimum number of characters allowable in the string")),Object(l.b)("p",null,"If only one parameter is provided, it defaults to ",Object(l.b)("inlineCode",{parentName:"p"},"maxLength"),"."),Object(l.b)("h3",{id:"intmax-int-min-int--0"},Object(l.b)("inlineCode",{parentName:"h3"},"int(max: int, min: int = 0)")),Object(l.b)("p",null,"Used for storing Integral numbers, equivalent to the ",Object(l.b)("inlineCode",{parentName:"p"},"INT")," datatype in ",Object(l.b)("inlineCode",{parentName:"p"},"SQL"),"."),Object(l.b)("h4",{id:"parameters-2"},"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"max: int"),": The highest value allowed to be stored")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"min: int = 0"),": The lowest value allowed to be stored "))),Object(l.b)("p",null,"If one one parameter is provided, it defaults to ",Object(l.b)("inlineCode",{parentName:"p"},"max"),".\nThe default values for ",Object(l.b)("inlineCode",{parentName:"p"},"max")," and ",Object(l.b)("inlineCode",{parentName:"p"},"min")," are ",Object(l.b)("inlineCode",{parentName:"p"},"INT_MAX")," and ",Object(l.b)("inlineCode",{parentName:"p"},"INT_MIN")," respectively."),Object(l.b)("h3",{id:"floatmax-float-min-float--00f-precision-int--8"},Object(l.b)("inlineCode",{parentName:"h3"},"float(max: float, min: float = 0.0f, precision: int = 8)")),Object(l.b)("p",null,"Used for storing Integral numbers, equivalent to the ",Object(l.b)("inlineCode",{parentName:"p"},"INT")," datatype in ",Object(l.b)("inlineCode",{parentName:"p"},"SQL"),"."),Object(l.b)("h4",{id:"parameters-3"},"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"max: float"),": The highest value allowed to be stored"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"min: float = 0.0f"),": The lowest value allowed to be stored "),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"precision: int = 8"),": The number of bits used in the exponent of the floating point number. See ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Single-precision_floating-point_format"}),"here")," for more information.")),Object(l.b)("p",null,"If one one parameter is provided, it defaults to ",Object(l.b)("inlineCode",{parentName:"p"},"max"),".\nThe default values for ",Object(l.b)("inlineCode",{parentName:"p"},"max")," and ",Object(l.b)("inlineCode",{parentName:"p"},"min")," are ",Object(l.b)("inlineCode",{parentName:"p"},"FLOAT_MAX")," and ",Object(l.b)("inlineCode",{parentName:"p"},"FLOAT_MIN")," respectively."),Object(l.b)("h3",{id:"date"},Object(l.b)("inlineCode",{parentName:"h3"},"date")),Object(l.b)("p",null,"Used for representing calendar dates. Stored in ",Object(l.b)("inlineCode",{parentName:"p"},"YYYY-MM-DD")," format with values in possible range of ",Object(l.b)("inlineCode",{parentName:"p"},"0001-01-0"),"1 through ",Object(l.b)("inlineCode",{parentName:"p"},"9999-12-31"),"."),Object(l.b)("h3",{id:"time"},Object(l.b)("inlineCode",{parentName:"h3"},"time")),Object(l.b)("p",null,"Used for representing times of day, but does not refer to one specific moment in time. Stored in ",Object(l.b)("inlineCode",{parentName:"p"},"hh:mm:ss[.nnnnnnn]")," format with values in possible range of ",Object(l.b)("inlineCode",{parentName:"p"},"00:00:00.0000000")," through ",Object(l.b)("inlineCode",{parentName:"p"},"23:59:59.9999999"),"."),Object(l.b)("h3",{id:"datetime"},Object(l.b)("inlineCode",{parentName:"h3"},"datetime")),Object(l.b)("p",null,"Used for representing specific moments in time, with a particular timezone. Stored in ",Object(l.b)("inlineCode",{parentName:"p"},"'YYYY-MM-DD HH:MM:SS+TZ'")," format. ",Object(l.b)("inlineCode",{parentName:"p"},"TZ")," is the number of hours offset from ",Object(l.b)("inlineCode",{parentName:"p"},"UTC+0"),"."),Object(l.b)("h3",{id:"datamaxsize-long"},Object(l.b)("inlineCode",{parentName:"h3"},"data(maxSize: long)")),Object(l.b)("p",null,"Used for storing binary file objects."),Object(l.b)("h4",{id:"parameters-4"},"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"maxSize: long"),": The maximum file size allowable in bytes.")))}p.isMDXComponent=!0}}]);